version: '3.11'


services:
    django:
        container_name: django
        build:
            context: ./clone_sound_cloud
        command:
            -   python manage.py runserver 0.0.0.0:8000
        volumes:
            -   ./clone_sound_cloud:/usr/src/app/
        ports:
            -   8001:8000
        env_file:
            -   ./.env




#services:
#    django:
#        build: .
#        container_name: django
#        command: python manage.py runserver 0.0.0.0:8000
#        volumes:
#            - .:/usr/src/app/
#        ports:
#            - "8000:8000"
#        env_file:
#            - ./.env
#        depends_on:
#            - pgdb
#            - redis
#    celery:
#        build: .
#        command: celery -A core worker -l INFO
#        volumes:
#            - .:/usr/src/app
#        env_file:
#            - ./.env
#        depends_on:
#            - django
#            - redis
#    pgdb:
#        image: postgres
#        container_name: pgdb
#        env_file:
#            -   ./.env
#        volumes:
#            - pgdata:/var/lib/postgresql/data/
#    redis:
#        image: "redis:alpine"
#
#volumes:
#    pgdata:



#services:
#    nginx:
#        restart: always
#        image: nginx:1.25-alpine
#        ports:
#            - 80:80
#        volumes:
#            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
#            - static_volume:/app/clone_sound_cloud/django_static
#    server:
#        restart: unless-stopped
#        build:
#            context: .
#            dockerfile: ./docker/backend/Dockerfile
#        entrypoint: /app/docker/backend/server-entrypoint.sh
#        volumes:
#            - static_volume:/app/clone_sound_cloud/django_static
#        expose:
#            - 8000
#        env_file:
#            -   ./.env
#    worker:
#        restart: unless-stopped
#        build:
#            context: .
#            dockerfile: ./docker/backend/Dockerfile
#        entrypoint: /app/docker/backend/worker-entrypoint.sh
#        volumes:
#            - static_volume:/app/clone_sound_cloud/django_static
#        env_file:
#            - ./.env
#        depends_on:
#            - server
#            - redis
#    redis:
#        restart: unless-stopped
#        image: redis:7.0.5-alpine
#        expose:
#            - 6379
#    db:
#        image: postgres:15.0-alpine
#        restart: unless-stopped
#        volumes:
#            - postgres_data:/var/lib/postgresql/data/
#        env_file:
#            - ./.env
#        expose:
#            - 5432
#
#volumes:
#    static_volume: {}
#    postgres_data: {}